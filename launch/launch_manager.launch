<launch>
	<node name="dynamixel_manager" pkg="dynamixel_controllers" type="controller_manager.py" required="true" output="screen">
        <rosparam>
            namespace: dxl_manager
            serial_ports:
                pan_tilt_port:
                    port_name: "/dev/ttyUSB0"
                    baud_rate: 1000000
                    min_motor_id: 1
                    max_motor_id: 21
                    update_rate: 20
        </rosparam>
    </node>

<!-- Start tilt joint controller -->
    <rosparam file="$(find jacob)/src/motor.yaml" command="load"/>
    <node name="controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port pan_tilt_port
				
                neck_controller
				left_shoulder_controller
				right_elbow_controller
				left_elbow_controller
				right_hand_controller
				left_hand_controller
				right_rot_hip_controller
                left_rot_hip_controller
                right_tilt_hip_controller
                left_tilt_hip_controller
                right_lift_leg_controller
                left_lift_leg_controller
                right_knee_controller
                left_knee_controller
                right_lift_ankle_controller
                left_lift_ankle_controller
                right_rot_ankle_controller
                left_rot_ankle_controller
				"
          output="screen"/>
          
<!-- Start joints trajectory controller controller -->
    <rosparam file="$(find jacob)/src/jtc.yaml" command="load"/>
    <node name="controller_spawner_meta" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --type=meta
                
				neck_controller
				left_shoulder_controller
				right_elbow_controller
				left_elbow_controller
				right_hand_controller

				left_hand_controller
                right_rot_hip_controller
                left_rot_hip_controller
                right_tilt_hip_controller
                left_tilt_hip_controller

                right_lift_leg_controller
                left_lift_leg_controller
                right_knee_controller
                left_knee_controller
                right_lift_ankle_controller
                
                left_lift_ankle_controller
                right_rot_ankle_controller
                left_rot_ankle_controller
                				"
		  output="screen"/>
	
	<node name="motion_saver" pkg="jacob" type="motion_saver.py" output="screen" launch-prefix="xterm -e"/>
    <node name="qlor_greet" pkg="jacob" type="qlor_greet.py" output="screen" />
    <node name="quantum_mood" pkg="jacob" type="quantum_mood.py" output="screen" />
    <node name="quantum_player" pkg="jacob" type="quantum_player.py" output="screen" launch-prefix="xterm -e"/>
	<node name="joint_mapper" pkg="jacob" type="joint_states2motor_states.py"/> 
	<node name="keyboard" pkg="keyboard" type="keyboard"/>
    
    <node name="quantum_motion_generation" pkg="jacob" type="quantum_motion_generation.py" output="screen" launch-prefix="xterm -e"/>
	<!-- <node name="qvision" pkg="jacob" type="qvision.py" output="screen" launch-prefix="xterm -e"/> -->
    <!-- <node name="motion_player" pkg="jacob" type="motion_player.py" output="screen" launch-prefix="xterm -e"/> -->
    <!-- <node name="battery_status" pkg="jacob" type="battery_status.py" output="screen" launch-prefix="xterm -e"/> -->
    <!-- <node name="speed_combine" pkg="jacob" type="speed_combine.py" output="screen" launch-prefix="xterm -e"/> -->

</launch>
